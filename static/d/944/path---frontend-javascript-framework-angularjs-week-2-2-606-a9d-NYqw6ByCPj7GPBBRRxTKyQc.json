{"data":{"site":{"siteMetadata":{"title":"bono's blog","author":"bono"}},"markdownRemark":{"id":"a669d51e-e1f2-5710-9cc5-ad22a9935081","excerpt":"Task Runners, Angular Scope, Forms and Form Validation-2 Angular Scope 스코프는 다음과 같이 정의된다. 스코프는 application model 과 관련된 object 다.\nThis is at…","html":"<h2>Task Runners, Angular Scope, Forms and Form Validation-2</h2>\n<h3>Angular Scope</h3>\n<p>스코프는 다음과 같이 정의된다.</p>\n<blockquote>\n<p>스코프는 application model 과 관련된 object 다.\nThis is at the core of Angular’s two-way data binding\nview 와 controller 사이를 연결해주는 역할을 한다.</p>\n</blockquote>\n<p>우선 controller 에 scope 를 만들어 속성을 부여한다. 그리고 view 는 controller 에 정의된 속성들을 bind 한다. 이런 방식을 통해 view 와 controller 의 sync 를 맞춰준다.</p>\n<h4>$rootScope</h4>\n<p>가장 상위의 scope 다. app 이 시작되면 만들어진다. 새로운 스코프는 ng-controller 와 같은 directives 를 통해 만들수 있다. scope 의 구조는 DOM 의 구조와 비슷하다. 그렇기 때문에 child scope 에서는 parent scope 의 속성에 접근이 가능하지만 그 반대는 불가하다.</p>\n<h4>app.js</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 기존 코드\nangular.module(&#39;confusionApp&#39;, [])\n    .controller(&#39;MenuController&#39;,function(){\n        this.tab = 1;\n        this.filtText = &#39;&#39;;\n\n        ...\n\n\t});\n\n// scope 적용 코드\nangular.module(&#39;confusionApp&#39;, [])\n\t// scope 정의\n    .controller(&#39;MenuController&#39;, [&#39;$scope&#39;,function($scope){\n        $scope.tab = 1;\n        $scope.filtText = &#39;&#39;;\n\n        ...\n\n    )]};</code></pre></div>\n<p>기존의 코드를 보면 this 접근자를 통해서 속성들을 부여하고 있다. 여기서 스코프를 사용하면, this 가 아닌 scope 에 속성들을 부여함으로써 view 단에서 scope 를 통해 각 속성에 접근하게 된다.</p>\n<h4>menu.html</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;!-- 기존 코드 --&gt;\n&lt;div class=&quot;container&quot;&gt;\n    &lt;div class=&quot;row row-content&quot; ng-controller=&quot;MenuController as menuCtrl&quot;&gt;\n        &lt;div class=&quot;col-xs-12&quot;&gt;\n            &lt;ul class=&quot;nav nav-tabs&quot; role=&quot;tablist&quot;&gt;\n                &lt;li role=&quot;presentation&quot; ng-class=&quot;{active:menuCtrl.isSelected(1)}&quot;&gt;\n                    &lt;a ng-click=&quot;menuCtrl.select(1)&quot; aria-controls=&quot;all menu&quot;\n                     role=&quot;tab&quot;&gt;The Menu&lt;/a&gt;\n                     ...\n                &lt;/li&gt;\n            &lt;/ul&gt;\n            &lt;div class=&quot;tab-content&quot;&gt;\n                &lt;ul class=&quot;media-list tab-pane fade in active&quot;&gt;\n                    &lt;li class=&quot;media&quot; ng-repeat=&quot;dish in menuCtrl.dishes | filter:menuCtrl.filtText&quot;&gt;\n                    ...\n\t                &lt;/li&gt;\n\t            &lt;/ul&gt;\n\t        &lt;/div&gt;\n\t    &lt;/div&gt;\n\t&lt;/div&gt;\n&lt;/div&gt;\n\n\n&lt;!-- scope 적용 코드 --&gt;\n&lt;div class=&quot;container&quot;&gt;\n    &lt;div class=&quot;row row-content&quot; ng-controller=&quot;MenuController&quot;&gt;\n        &lt;div class=&quot;col-xs-12&quot;&gt;\n            &lt;ul class=&quot;nav nav-tabs&quot; role=&quot;tablist&quot;&gt;\n                &lt;li role=&quot;presentation&quot; ng-class=&quot;{active:isSelected(1)}&quot;&gt;\n                    &lt;a ng-click=&quot;select(1)&quot; aria-controls=&quot;all menu&quot;\n                     role=&quot;tab&quot;&gt;The Menu&lt;/a&gt;\n                     ...\n                &lt;/li&gt;\n            &lt;/ul&gt;\n            &lt;div class=&quot;tab-content&quot;&gt;\n                &lt;ul class=&quot;media-list tab-pane fade in active&quot;&gt;\n                    &lt;li class=&quot;media&quot; ng-repeat=&quot;dish in dishes | filter:filtText&quot;&gt;\n                    ...\n\t                &lt;/li&gt;\n\t            &lt;/ul&gt;\n\t        &lt;/div&gt;\n\t    &lt;/div&gt;\n\t&lt;/div&gt;\n&lt;/div&gt;</code></pre></div>\n<p>기존코드에서는 menuController 의 alias 인 menuCtrl 을 만들어 각 변수와 함수 앞에 붙여줬었다. 하지만 MenuController 에 스코프가 적용되면서 해당 컨트롤러가 속한 DOM 내부에서는 컨트롤러 이름없이 변수/함수명으로 직접 접근이 가능해진다. 스코프를 적용함으로써 훨씬 코드가 간단해졌다.</p>\n<h4>ng-show</h4>\n<p>ng-show directive 는 주어진 조건(true/false)에 따라서 해당 DOM 객체를 보여줄것인지(show) 말것인지(not show)를 결정해준다. 길게 설명할 필요없이 예제를 보자</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;div class=&quot;col-xs-12&quot;&gt;\n    &lt;button ng-click=&quot;toggleDetails()&quot; class=&quot;btn btn-xs btn-primary pull-right&quot; type=&quot;button&quot;&gt;\n        {{showDetails ? &#39;Hide Details&#39;:&#39;Show Details&#39;}}\n    &lt;/button&gt;\n    &lt;ul class=&quot;nav nav-tabs&quot; role=&quot;tablist&quot;&gt;\n\t    ...\n\t&lt;/ul&gt;\n\t...\n        &lt;p ng-show=&quot;showDetails&quot;&gt;{{dish.description}}&lt;/p&gt;\n    ...\n&lt;/div&gt;</code></pre></div>\n<p>$scope.showDetails 를 app.js 에 설정해놓고 기본값으로 false 를 지정해놓자. 그리고는 button 을 하나 만들어 showDetails 가 true 이면 Hide Details 문구의 버튼을 노출하고 false 면 Show Details 문구의 버튼을 노출한다. 리스트의 요소중에 description 부분에 ng-show directive 를 선언하고 showDetails 를 넣어주자. 그리고 버튼을 클릭하면(showDetails 가 toggle 된다. app.js 에 function 을 만들어둔다.) showDetails 가 true 가 됐다가 false 가 되면서 description 이 보여졌다가 가려졌다가 할 것이다.</p>\n<h3>Angular Forms and Form Validation</h3>\n<h4>Forms</h4>\n<p>form 은 유저에게 웹 사이트의 정보를 제공하는 가장 널리 상요되는 방법이다. 이번 강의에서는 angularJS 에서 form 을 이용하는 방법과 form 의 validation 체크하는 방법에 대해서 알아보자.</p>\n<p>form 에서는 two-way data binding 이 중요하게 사용되는데,\n넘어가기 앞서 잠깐 짚고 넘어가야할게 있다.\nng-model 의 개념이 약간 모호해서 한번 찾아봤다.</p>\n<blockquote>\n<p><em>ng-model</em></p>\n<p>html 의 input, select, textarea 와 같은 입력 요소에 값을 갱신하면 ng-model 해 설정된 변수의 값도 변함\n반대로 변수의 값이 바뀌면 input 등의 화면도 동일하게 변경된다.\n이를 two-way data binding 이라 한다.\n참고로 form 필드에 설정된 ng-model 의 속성을 필드 내에서 부여할 수도 있다.</p>\n</blockquote>\n<p>form 과 자바스크립트 object 간의 연결해주는 역할을 하는 것이 ng-model 이다. ng-model 에 설정된 변수가 변경되면 변경된 것을 html 에 그대로 반영해준다.\n예를들어보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// javascript code\n.controller(&#39;ContactController&#39;, [&#39;$scope&#39;, function($scope){\n    $scope.feedback = {mychannel:&quot;&quot;, firstname:&quot;&quot;,\n                       lastname:&quot;&quot;, agree:&quot;&quot;, email:&quot;&quot;};\n}]);\n\n// html code\n&lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;firstname&quot;\n\tname=&quot;firstname&quot; placeholder=&quot;Enter First Name&quot;\n\tng-model=&quot;feedback.firstname&quot; required&gt;</code></pre></div>\n<p>위와 같이 angularJS 의 controller 에 feedback 이라는 object 를 만들어두고, html 에서 feedback.firstname 을 ng-model attribute 에 지정해두면, firstname 이 변함에 따라서 자동으로 feedback.firstname 의 값을 변경한다.</p>\n<p>select 의 경우에는 어떤가 보자</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// javascript code\nvar channels = [{value:&quot;tel&quot;, label:&quot;Tel.&quot;}, {value:&quot;Email&quot;, label:&quot;Email&quot;}];\n\n// html code\n&lt;select class=&quot;form-control&quot; ng-model=&quot;feedback.mychannel&quot;\n\t\tng-options=&quot;channel.value as channel.label for channel in channels&quot;&gt;\n\t&lt;option value=&quot;&quot;&gt;Tel. or Email?&lt;/option&gt;\n&lt;/select&gt;</code></pre></div>\n<p>우선 select 의 item 들을 저장해둘 자바스크립트 array 변수 channels 를 만든다. 그리고 select 태그내에 ng-model, ng-options 를 위와 같이 설정해두자. ng-model 의 mychannel 에는 유저가 선택된 channel 의 value 가 들어갈 것이다. ng-options directive 에서 channels 라는 자바스크립트 array 를 for loop 로 분해하여 각각 channel 이라는 object 를 가져온다. 그리고 channel.label 이 option 의 text 로 들어가고, channel.value 가 option 태그의 value 로써 들어가게 된다. 즉, 만들어진 selectbox 의 item 하나를 선택하게 되면, 해당 item 의 value 가 feedback.mychannel 변수에 할당된다.</p>\n<p>위의 방법을 이용하면 form 의 다른요소나, 웹페이지의 상태에 따라 select 의 항목을 동적으로 바꿀 수 있게 된다.</p>\n<h4>Form Validation</h4>\n<p>우선 HTML5 form validation 을 끄자\n그리고 ng-submit directive 를 이용하여 form 이 submit 될 때 sendFeedback 함수를 호출하도록 하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;form class=&quot;form-horizontal&quot; name=&quot;feedbackForm&quot; ng-submit=&quot;sendFeedback()&quot; novalidate&gt;</code></pre></div>\n<p>validation 체크할때 field name 을 이용하여 다음의 필드 속성들을 체크할 수 있다.</p>\n<table>\n<thead>\n<tr>\n<th>property</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>$pristine</td>\n<td>true if form has not been changed (form 의 변경사항이 없다면,)</td>\n</tr>\n<tr>\n<td>$dirty</td>\n<td>reverse of $pristine</td>\n</tr>\n<tr>\n<td>$valid</td>\n<td>true if form field/whole form is valid (form 이 valid 하면,)</td>\n</tr>\n<tr>\n<td>$invalid</td>\n<td>reverse of $valid</td>\n</tr>\n</tbody>\n</table>\n<p>예를 들어보자.</p>\n<ul>\n<li>feedbackForm.firstName.$pristine : firstName 필드의 변경사항이 없으면 true</li>\n<li>feebackForm.$valid : feedbackForm 의 모든 항목이 valid 하면 true</li>\n</ul>\n<p>에러가 있을경우(invalid 하면) bootstrap 의 class 를 이용하자.</p>\n<blockquote>\n<p>.has-error, .has-warning, .has-success\n.help-block to display helpful messages below the field</p>\n</blockquote>\n<h4>app.js</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">...\n\n\t.controller(&#39;ContactController&#39;, [&#39;$scope&#39;, function($scope){\n\t    $scope.feedback = {mychannel:&quot;&quot;, firstname:&quot;&quot;,\n\t                       lastname:&quot;&quot;, agree:&quot;&quot;, email:&quot;&quot;};\n\t    var channels = [{value:&quot;tel&quot;, label:&quot;Tel.&quot;},\n\t                    {values:&quot;Email&quot;, label:&quot;Email&quot;}];\n\t    $scope.channels = channels;\n\t    $scope.invalidChannelSelection = false;\n\n\t}])\n\t.controller(&#39;FeedbackController&#39;, [&#39;$scope&#39;, function($scope){\n\t    $scope.sendFeedback = function() {\n\t        console.log($scope.feedback);\n\n\t        if ($scope.feedback.agree &amp;&amp; ($scope.feedback.mychannel == &quot;&quot;)) {\n\t            $scope.invalidChannelSelection = true;\n\t            console.log(&#39;incorrent&#39;);\n\t        } else {\n\t            $scope.invalidChannelSelection = false;\n\t            $scope.feedback = {\n\t                mychannel:&quot;&quot;, firstname:&quot;&quot;,\n\t                lastname:&quot;&quot;, agree:false, email:&quot;&quot;\n\t            };\n\t            $scope.feedback.mychannel = &quot;&quot;;\n\t            $scope.feedbackForm.$setPristine();\n\t            console.log($scope.feedback);\n\t        }\n\t    };\n\t}]);\n\n...</code></pre></div>\n<h4>contactus.html</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot; ng-app=&quot;confusionApp&quot;&gt;\n\n...\n\n&lt;body&gt;\n    &lt;div class=&quot;container&quot; ng-controller=&quot;ContactController&quot;&gt;\n    \t...\n                &lt;form class=&quot;form-horizontal&quot; role=&quot;form&quot; name=&quot;feedbackForm&quot; ng-submit=&quot;sendFeedback()&quot; novalidate&gt;\n                    &lt;div class=&quot;form-group&quot; ng-class=&quot;{ &#39;has-error&#39; : feedbackForm.firstname.$error.required &amp;&amp; !feedbackForm.firstname.$pristine }&quot;&gt;\n                        &lt;label for=&quot;firstname&quot; class=&quot;col-sm-2 control-label&quot;&gt;First Name&lt;/label&gt;\n                        &lt;div class=&quot;col-sm-10&quot;&gt;\n                            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;firstname&quot; name=&quot;firstname&quot; placeholder=&quot;Enter First Name&quot; ng-model=&quot;feedback.firstname&quot; required&gt;\n                            &lt;span ng-show=&quot;feedback.firstname.$error.required &amp;&amp; !feedbackForm.firstname.$pristine&quot; class=&quot;help-block&quot;&gt;Your First name is required&lt;/span&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div class=&quot;form-group&quot; ng-class=&quot;{ &#39;has-error&#39; : feedbackForm.lastname.$error.required &amp;&amp; !feedbackForm.lastname.$pristine }&quot;&gt;\n                        &lt;label for=&quot;lastname&quot; class=&quot;col-sm-2 control-label&quot;&gt;Last Name&lt;/label&gt;\n                        &lt;div class=&quot;col-sm-10&quot;&gt;\n                            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;lastname&quot; name=&quot;lastname&quot; placeholder=&quot;Enter Last Name&quot; ng-model=&quot;feedback.lastname&quot; required&gt;\n                            &lt;span ng-show=&quot;feedback.lastname.$error.required &amp;&amp; !feedbackForm.lastname.$pristine&quot; class=&quot;help-block&quot;&gt;Your Last name is required&lt;/span&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div class=&quot;form-group&quot;&gt;\n                        &lt;label for=&quot;telnum&quot; class=&quot;col-sm-2 control-label&quot;&gt;Contact Tel.&lt;/label&gt;\n                        &lt;div class=&quot;col-xs-5 col-sm-4 col-md-3&quot;&gt;\n                            &lt;div class=&quot;input-group&quot;&gt;\n                                &lt;div class=&quot;input-group-addon&quot;&gt;(&lt;/div&gt;\n                                    &lt;input type=&quot;tel&quot; class=&quot;form-control&quot; id=&quot;areacode&quot; name=&quot;areacode&quot; placeholder=&quot;Area code&quot; ng-model=&quot;feedback.tel.areacode&quot;&gt;\n                                &lt;div class=&quot;input-group-addon&quot;&gt;)&lt;/div&gt;\n                            &lt;/div&gt;\n                        &lt;/div&gt;\n                        &lt;div class=&quot;col-xs-7 col-sm-6 col-md-7&quot;&gt;\n                                    &lt;input type=&quot;tel&quot; class=&quot;form-control&quot; id=&quot;telnum&quot; name=&quot;telnum&quot; placeholder=&quot;Tel. number&quot; ng-model=&quot;feedback.tel.number&quot;&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div class=&quot;form-group&quot; ng-class=&quot;{ &#39;has-error&#39; : feedbackForm.emailid.$invalid &amp;&amp; !feedbackForm.emailid.$pristine }&quot;&gt;\n                        &lt;label for=&quot;emailid&quot; class=&quot;col-sm-2 control-label&quot;&gt;Email&lt;/label&gt;\n                        &lt;div class=&quot;col-sm-10&quot;&gt;\n                            &lt;input type=&quot;email&quot; class=&quot;form-control&quot; id=&quot;emailid&quot; name=&quot;emailid&quot; placeholder=&quot;Email&quot; ng-model=&quot;feedback.email&quot; required&gt;\n                            &lt;span ng-show=&quot;feedbackForm.emailid.$invalid &amp;&amp; !feedbackForm.emailid.$pristine&quot; class=&quot;glyphicon glyphicon-remove form-control-feedback&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;\n                            &lt;span ng-show=&quot;feedbackForm.emailid.$invalid &amp;&amp; !feedbackForm.emailid.$pristine&quot; class=&quot;help-block&quot;&gt;Enter a valid email address.&lt;/span&gt;\n                            &lt;span ng-show=&quot;feedbackForm.emailid.$error.required &amp;&amp; !feedbackForm.emailid.$pristine&quot; class=&quot;help-block&quot;&gt;Enter a valid email address.&lt;/span&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div class=&quot;form-group&quot; ng-class=&quot;{ &#39;has-error&#39; : invalidChannelSelection }&quot;&gt;\n                       &lt;div class=&quot;checkbox col-sm-5 col-sm-offset-2&quot;&gt;\n                            &lt;label class=&quot;checkbox-inline&quot;&gt;\n                                &lt;input type=&quot;checkbox&quot; name=&quot;approve&quot; value=&quot;&quot; ng-model=&quot;feedback.agree&quot;&gt;\n                                &lt;strong&gt;May we contact you?&lt;/strong&gt;\n                            &lt;/label&gt;\n                        &lt;/div&gt;\n                        &lt;div class=&quot;col-sm-3 col-sm-offset-1&quot; ng-show=&quot;feedback.agree&quot;&gt;\n                            &lt;select class=&quot;form-control&quot; ng-model=&quot;feedback.mychannel&quot; ng-options=&quot;channel.value as channel.label for channel in channels&quot;&gt;\n                                &lt;option value=&quot;&quot;&gt;Tel. or Email?&lt;/option&gt;\n                            &lt;/select&gt;\n                            &lt;span ng-show=&quot;invalidChannelSelection&quot; class=&quot;help-block&quot;&gt;Select an option.&lt;/span&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div class=&quot;form-group&quot;&gt;\n                        &lt;label for=&quot;feedback&quot; class=&quot;col-sm-2 control-label&quot;&gt;Your Feedback&lt;/label&gt;\n                        &lt;div class=&quot;col-sm-10&quot;&gt;\n                            &lt;textarea class=&quot;form-control&quot; id=&quot;feedback&quot; name=&quot;feedback&quot; rows=&quot;12&quot; ng-model=&quot;feedback.comments&quot;&gt;&lt;/textarea&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div class=&quot;form-group&quot;&gt;\n                        &lt;div class=&quot;col-sm-offset-2 col-sm-10&quot;&gt;\n                            &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot; ng-disabled=&quot;feedbackForm.$invalid&quot;&gt;Send Feedback&lt;/button&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;/form&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;col-xs-12 col-sm-3&quot;&gt;\n                &lt;h3&gt;Your Current Feedback:&lt;/h3&gt;\n                &lt;p&gt;{{feedback.firstname}} {{feedback.lastname | uppercase }}&lt;/p&gt;\n                &lt;p&gt;Contact Tel.: ({{feedback.tel.areacode}}){{feedback.tel.number}}&lt;/p&gt;\n                &lt;p&gt;Contact Email: {{feedback.email}}&lt;/p&gt;\n                &lt;p ng-show=&quot;feedback.agree&quot;&gt;Contact by:{{feedback.mychannel}}&lt;/p&gt;\n                &lt;p&gt;Comments: {{feedback.comments}}&lt;/p&gt;\n            &lt;/div&gt;\n       &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;&lt;/html&gt;</code></pre></div>","frontmatter":{"title":"[coursera] AngularJS week 2-2","date":"August 28, 2016"}}},"pageContext":{"slug":"/frontend-javascript-framework-angularjs-week2-2/","previous":{"fields":{"slug":"/temp/frontend-javascript-framework-angularjs-week2-2/"},"frontmatter":{"title":"[coursera] AngularJS week 2-2"}},"next":{"fields":{"slug":"/temp/frontend-javascript-framework-angularjs-week3-1/"},"frontmatter":{"title":"[coursera] AngularJS week 3-1"}}}}