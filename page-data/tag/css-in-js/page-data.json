{"componentChunkName":"component---src-templates-tag-js","path":"/tag/css-in-js","result":{"data":{"site":{"siteMetadata":{"title":"bono blog","description":"프론트엔드 엔지니어. 글을 씁니다."}},"allMarkdownRemark":{"totalCount":3,"edges":[{"node":{"excerpt":"지금껏, 이 블로그는 로 CSS를 작성하고 있었다. 대표적인 CSS-in-JS 방식이다. 블로그는 스타일 코드가 많지 않기 때문에 CSS-in-JS로 만들어도 충분하다. 하지만, 조금이라도 빠르게 만들어보기 위해 CSS Modules 방식으로 변경해…","fields":{"slug":"/2020/10/11/gatsby-blog-to-css-modules/"},"frontmatter":{"date":"11 October, 2020","title":"gatsby 블로그에 CSS Modules 적용하기"}}},{"node":{"excerpt":"지난번 포스팅(CSS-in-JS에서 CSS-in-CSS로 바꿔야 하는 이유)에는 CSS-in-JS에서 CSS-in-CSS 방식으로 변경해야 하는 이유에 대해 설명했다. 요약해보면, 다음과 같다.  성능에 초점을 맞춘다면 , 개발 생산성에 초점을 맞춘…","fields":{"slug":"/2020/09/27/css-in-js-vs-css-modules/"},"frontmatter":{"date":"27 September, 2020","title":"CSS-in-JS(Styled Components) vs CSS-inCSS(CSS Modules) 성능 비교"}}},{"node":{"excerpt":"는 쉽지 않다. 처음 배울 때는 ‘이 정도쯤이야?’라는 생각이 들 정도로 쉬워 보인다. 실제로 러닝커브가 그리 높지는 않다. 그래서 과거에는 주로 신입이나 경력이 짧은 사람에게 맡기는 경우가 많았다. 당시에는 프론트엔드 영역이 명확히 나뉘어 있지 않…","fields":{"slug":"/2020/09/14/why-css-in-css/"},"frontmatter":{"date":"13 September, 2020","title":"CSS-in-JS에서 CSS-in-CSS로 바꿔야 하는 이유"}}}]}},"pageContext":{"tag":"CSS-in-JS"}},"staticQueryHashes":[]}