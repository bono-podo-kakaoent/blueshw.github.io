{"componentChunkName":"component---src-templates-tag-js","path":"/tag/javascript","result":{"data":{"site":{"siteMetadata":{"title":"bono blog","description":"프론트엔드 엔지니어. 글을 씁니다."}},"allMarkdownRemark":{"totalCount":25,"edges":[{"node":{"excerpt":"디자인 패턴의 프론트엔드 적용 사례 디자인 패턴은 반복적으로 나타나는 프로그래밍 문제를 해결하기 위한 입니다. 이번 글에서는 대표적인 디자인 패턴을 프론트엔드에 어떻게 적용할 수 있는지, 간단한 예제 코드와 함께 살펴봅니다. 모듈 패턴 (Module…","fields":{"slug":"/2023/08/26/design-pattern-for-frontend/"},"frontmatter":{"date":"26 August, 2023","title":"프론트엔드(frontend) 마스터를 위한 디자인 패턴 적용 가이드와 예제"}}},{"node":{"excerpt":"프론트엔드에서 애니메이션을 구현하는 방법은 다양합니다. CSS 속성만으로도 구현이 가능하죠. 하지만 단순한 애니메이션이면 몰라도 조금만 난의도가 올라도 CSS 코드는 매우 복잡해집니다.  아래 몇 가지 예를 들어 프론트엔드에서 애니메이션 구현하는 방…","fields":{"slug":"/2023/08/25/various-animation/"},"frontmatter":{"date":"25 August, 2023","title":"프론트엔드에서 다양한 방식으로 애니메이션(animation) 구현하기"}}},{"node":{"excerpt":"의 영역이 점점 커지고 있다. 과거의 프론트엔드는 HTML과 CSS와 약간의 Javascript(이하 JS)를 다루는 영역이었다. 흔히 웹 퍼블리셔의 역할인 UI개발이 주된 업무였다. 하지만, 웹의 기능이 복잡해지고 동적 요구사항이 늘어나면서 과거 …","fields":{"slug":"/2020/05/05/know-front-end-right-away/"},"frontmatter":{"date":"05 May, 2020","title":"Frontend 바로 알기"}}},{"node":{"excerpt":"애플의 웹 사이트는 멋지다. 사이트에 특별한 기능이 있는건 아니다. 대부분 제품 소개 페이지다. 제품 소개페이지를 얼마나 잘 만들었길래, 뭐가 멋지다는걸까? 의문이 들 법하다. 그런데, 하나하나 살펴보면, 정말 세심하게 공들인 느낌이다. 단순한 웹 …","fields":{"slug":"/2019/10/13/show-items-on-scroll/"},"frontmatter":{"date":"13 October, 2019","title":"[interactive web] 스크롤(scroll) 이벤트로 목록을 더 아름답게 만들어보자"}}},{"node":{"excerpt":"페이이지를 만들었다. 404페이지가 뭔지 모르는 분은 없겠지만, 간단히 말하면 페이지를 찾지 못했을때 나타하는 에러 페이지다. 정상적이 상황에서 보이는 페이지가 아니기 때문에 대부분 서비스를 만들때 중요하게 생각하지 않는다. 하지만, 유명한 웹 서비…","fields":{"slug":"/2019/08/03/404-page-not-found/"},"frontmatter":{"date":"04 August, 2019","title":"[interactive web] 404 페이지를 만들어봤다"}}},{"node":{"excerpt":"공지사항이나 FAQ 페이지에는 가 많이 사용된다. 이라고도 하는데, 기본적인 리스트에서 각 항목을 터치(클릭)하면 세부 내용이 확장되는 형태의 UI다. 비교적 간단한 UI기 때문에 css와 javscript를 적절히 조합하면 누구나 손쉽게(feat.…","fields":{"slug":"/2019/06/07/expandable-list-by-pure-css/"},"frontmatter":{"date":"07 June, 2019","title":"[CSS] javascript없이 css만으로 expandable(collapsible) list 만들기"}}},{"node":{"excerpt":"회사 동료의 리액트(react) 책이 출간되었다. 제목은 (Yes24, 교보문고, 알라딘) 부제는 다. 최신 자바스크립트의 기본부터 리액트, 최신(?) 리액트 문법인 hooks, 리덕스(redux), 바벨(babel), 웹팩(webpack), SSR…","fields":{"slug":"/2019/06/06/practical-react-book/"},"frontmatter":{"date":"06 June, 2019","title":"친구의 책이 출간되었다 (feat. 실전 리액트 프로그래밍 by 이재승)"}}},{"node":{"excerpt":"react에서 modal 뷰 구현을 위해 react-modal 패키지를 사용한다. 근데 이 react-modal을 쓰다보면 한가지 문제에 부딪힌다. 바로 모달 외부의 dimmed 영역이 스크롤되는 문제다. 예제를 살펴보자 (모바일이라면 반드시 새창으…","fields":{"slug":"/2019/04/24/prevent-scroll-outside/"},"frontmatter":{"date":"25 April, 2019","title":"modal(popup) 에서 외부(body or parentElement) 스크롤 막기"}}},{"node":{"excerpt":"한동안 hexo 로 운영하던 github page 블로그에 글을 올리지 않았다. 최근 하나 올렸지만 거의 5 개월만이었다. 그 사이, 개발과는 무관한 블로그를 새로 시작했다. 예전부터 사용하던 블로그 플랫폼인 에 둥지를 틀었고, 6 월부터 대략 세달…","fields":{"slug":"/2018/10/07/hexo_to_gatsby/"},"frontmatter":{"date":"07 October, 2018","title":"hexo에서 gatsby로 블로그 이전하기 (feat. tistory)"}}},{"node":{"excerpt":"의문은 아래와 같은 코드에서 시작되었습니다. 객체를 매개변수로 받는  함수에 새롭게 만든 객체를 인자로 전달하였습니다. 그리고  함수에서 obj 변수에 새로운 객체를 할당하였습니다. 과연 는 어떤 값이 출력될까요? Call By Value 가끔 일하…","fields":{"slug":"/2018/09/15/pass-by-reference/"},"frontmatter":{"date":"15 September, 2018","title":"[javascript] call by value"}}},{"node":{"excerpt":"React 프로젝트에서 가장 많이 사용되는 테스트 모듈로 Jest가 있습니다. react 와 Jest 둘 다 페이스북이 만든 오픈소스 프로젝트입니다. 같은 회사에서 만든 오픈소스기 때문에 서로 호환이 잘 될거라는 믿음으로 사용하고 있습니다. 호환성과…","fields":{"slug":"/2018/03/21/function-test-with-jest/"},"frontmatter":{"date":"21 March, 2018","title":"[Jest] mock 함수를 이용하여 함수 호출 테스트 하기"}}},{"node":{"excerpt":"this 는 어렵지 않습니다. this 를 어렴풋이 알고는 있지만, 누가 물어봤을때 제대로 대답해 줄수 있도록 정리해보겠습니다. 많은 개발자들이 javascript 의 this 를 혼란스러워합니다. 사실 개념 자체가 어렵진 않습니다. 다만, 다른 프…","fields":{"slug":"/2018/03/12/this/"},"frontmatter":{"date":"12 March, 2018","title":"[javascript] this는 어렵지 않습니다."}}},{"node":{"excerpt":"async, await 는 ES8(ECMAScript2017)의 공식 스펙(링크)으로 비교적 최근에 정의된 문법입니다. 를 사용하면 비동기 코드를 작성할 때 비교적 쉽고 명확하게 코드를 작성할 수 있습니다. 자바스크립트는 싱글 스레드 프로그래밍언어기…","fields":{"slug":"/2018/02/27/async-await/"},"frontmatter":{"date":"27 February, 2018","title":"[javascript] async, await를 사용하여 비동기 javascript를 동기식으로 만들자"}}},{"node":{"excerpt":"원본: https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\n의역, 오역이 가득합니다. 개인적으로 정확한 개념을 잡기 위한 번역입니다. 불필요하다 생각한 내용은 과감히 제거했습니…","fields":{"slug":"/2018/01/28/tasks-microtasks-queues-and-schedules/"},"frontmatter":{"date":"28 January, 2018","title":"[번역] Tasks, microtasks, queues and schedules"}}},{"node":{"excerpt":"리액트를 개발하다보면 이런 코드를 본적 있을것입니다. this(아마도 react 클래스 객체)에 속한 어떤 메서드를 다시 this 에 bind 한다라?? 굳이 왜 이런짓을 해야하는지 의문이 들만합니다. 리액트에서 이러한 코드가 빈번하게 작성되는 이유…","fields":{"slug":"/2017/07/01/arrow-function/"},"frontmatter":{"date":"01 July, 2017","title":"[ES6, react] 리액트에서 화살표 함수(arrow function)는 선택이 아닌 필수"}}},{"node":{"excerpt":"CommonJs, AMD, ES6 Module require 와 import 에 대해서 비교해 보기 위해서는 우선 CommonJs와 AMD(Asynchronous Module Definition), ES6 내장모듈과 같은 자바스크립트의 모듈 시스템에…","fields":{"slug":"/2017/05/16/ES-require-vs-import/"},"frontmatter":{"date":"16 May, 2017","title":"[javascript] require vs import (CommonJs와 ES6)"}}},{"node":{"excerpt":"자바스크립트 문법 중에 가장 어려운 부분을 꼽으라면 단연 클로저(closure)일것입니다. 저 또한 클로저 개념은 어느정도는 이해하고 있었지만, 정확한 용도와 개념을 설명하라고 하면 명쾌하게 말하기 쉽지 않습니다. 아마도 많은 사람들이 저 처럼 대충…","fields":{"slug":"/2017/04/12/javascript-closure/"},"frontmatter":{"date":"12 April, 2017","title":"[javascript] 클로저(closure)에 대해서 알아보자"}}},{"node":{"excerpt":"ES6(ECMA Script 2015, 줄여서 ES6)로 넘어오면서 기존 ES5 까지 사용하던 변수 선언 키워드인 var에다 const와 let이라는 키워드가 추가되었습니다. 물론 var 없이도 변수를 선언할 수 있습니다만, 그렇게 되면 전역객체(브…","fields":{"slug":"/2017/03/28/ES-var-VS-const-VS-let/"},"frontmatter":{"date":"28 March, 2017","title":"[ES6] var VS const VS let"}}},{"node":{"excerpt":"ionic 개발에 필요한 것들 기본적으로 ionic, nodejs, cordova 등만 있어도 개발은 가능하겠지만, 안드로이드 에뮬레이터 실행을 위해서는 jdk 설치가 필요하겠고, ios 에뮬레이터 실행을 위해서는 xcode 설치도 필수가 되겠다(아…","fields":{"slug":"/2016/11/16/ionic-install/"},"frontmatter":{"date":"16 November, 2016","title":"[ionic] ionic 개발에 필요한 것들"}}},{"node":{"excerpt":"Client-Server Communication and Angular Testing Networking Essentials 이번 챕터에서는 클라이언트 서버 구조에서 AngularJS 가 어떻게 동작하는지 살펴볼것이다.\n요즘 가장 많이 사용되는 Cl…","fields":{"slug":"/2016/10/02/frontend-javascript-framework-angularjs-week4/"},"frontmatter":{"date":"02 October, 2016","title":"[coursera] AngularJS week 4"}}},{"node":{"excerpt":"Single Page Applications Angular ngRoute and Single Page Applications Single Page Applications(SPA) Single Page Application 이란, 말그대로 하나의 페이…","fields":{"slug":"/2016/09/05/frontend-javascript-framework-angularjs-week3-2/"},"frontmatter":{"date":"05 September, 2016","title":"[coursera] AngularJS week 3-2"}}},{"node":{"excerpt":"Single Page Applications Angular Factory, Service and Dependency Injection Dependency Injection Dependency Injection(DI)이란 의존성을 해결하기 위한 Inv…","fields":{"slug":"/2016/09/02/frontend-javascript-framework-angularjs-week3-1/"},"frontmatter":{"date":"02 September, 2016","title":"[coursera] AngularJS week 3-1"}}},{"node":{"excerpt":"Task Runners, Angular Scope, Forms and Form Validation-2 Angular Scope 스코프는 다음과 같이 정의된다. 스코프는 application model 과 관련된 object 다.\nThis is at …","fields":{"slug":"/2016/08/28/frontend-javascript-framework-angularjs-week2-2/"},"frontmatter":{"date":"28 August, 2016","title":"[coursera] AngularJS week 2-2"}}},{"node":{"excerpt":"Task Runners, Angular Scope, Forms and Form Validation-1 Web Tools: Grunt and Gulp Task-Runners 웹개발을 하다보면 반복적으로 처리해야하는 태스크가 많이 있다. DRY(do n…","fields":{"slug":"/2016/08/25/frontend-javascript-framework-angularjs-week2-1/"},"frontmatter":{"date":"25 August, 2016","title":"[coursera] AngularJS week 2-1"}}},{"node":{"excerpt":"Full-Stack Web Development: The Big Picture Three Tier Architecture 보통 웹개발에서 말하는 3-티어 아키텍쳐는 아래의 세 영역으로 나뉜다. Presentaion Layer : HTML, CSS, …","fields":{"slug":"/2016/08/18/frontend-javascript-framework-angularjs-week1/"},"frontmatter":{"date":"18 August, 2016","title":"[coursera] AngularJS week 1"}}}]}},"pageContext":{"tag":"javascript"}},"staticQueryHashes":[]}