{"componentChunkName":"component---src-templates-blog-post-js","path":"/2019/10/13/show-items-on-scroll/","result":{"data":{"site":{"siteMetadata":{"title":"bono blog","author":"bono"}},"markdownRemark":{"id":"8d79c1f4-32b3-5b6a-80e3-09aea2d40a9c","excerpt":"애플의 웹 사이트는 멋지다. 사이트에 특별한 기능이 있는건 아니다. 대부분 제품 소개 페이지다. 제품 소개페이지를 얼마나 잘 만들었길래, 뭐가 멋지다는걸까? 의문이 들 법하다. 그런데, 하나하나 살펴보면, 정말 세심하게 공들인 느낌이다. 단순한 웹 …","html":"<p><a href=\"https://www.apple.com/kr/\">애플의 웹 사이트</a>는 멋지다. 사이트에 특별한 기능이 있는건 아니다. 대부분 제품 소개 페이지다. 제품 소개페이지를 얼마나 잘 만들었길래, 뭐가 멋지다는걸까? 의문이 들 법하다. 그런데, 하나하나 살펴보면, 정말 세심하게 공들인 느낌이다. 단순한 웹 페이지일 뿐이지만, 사용자에게 제품의 특징을 잘 전달하기 위해 여러가지 효과를 만들어냈다.스크롤에 따라 이미지가 <code class=\"language-text\">fade-in/fade-out</code> 되는건 기본이고, 확대되거나 옆에서 나타나기도한다. 영상이 재생되는가 하면, 그래프가 그려진다. 이 모든것들은 오로지 <code class=\"language-text\">스크롤</code>이라는 이벤트를 기반으로 만들어졌다. 사용자가 스크롤만 할 뿐이지만, 웹 페이지에서는 마치 한편의 영상이 재생되는것처럼 보인다.</p>\n<p>모던 웹에서 다양한 효과는 많은 부분 스크롤로 표현할 수 있다. 가장 간단하게 <code class=\"language-text\">opacity</code>와 <code class=\"language-text\">transform</code>만 사용하더라도 웹사이트를 충분히 <code class=\"language-text\">interactive</code>하게 만들수 있다. 어떤 목록을 아래로 스크롤하다 viewport에 나타나는 순간 위로 올라오는 애니메이션과 함께 점점 밝아지도록 할 수 있다. 이 단순한 효과만으로 무미건조하고 딱딱한 목록에 생명을 불어 넣을 수 있다.</p>\n<h3 id=\"opacity와-transform을-이용해서-목록을-interactive하게-만들기\" style=\"position:relative;\"><a href=\"#opacity%EC%99%80-transform%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%B4%EC%84%9C-%EB%AA%A9%EB%A1%9D%EC%9D%84-interactive%ED%95%98%EA%B2%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"opacity와 transform을 이용해서 목록을 interactive하게 만들기 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>opacity와 transform을 이용해서 목록을 interactive하게 만들기</h3>\n<p>결과물부터 확인하자. 스크롤을 아래로 내리면 각 article과 image가 아래에서 위로 자연스럽게 나타난다.</p>\n<p class=\"codepen\" data-height=\"478\" data-theme-id=\"0\" data-default-tab=\"result\" data-user=\"blueshw\" data-slug-hash=\"PvYZgB\" style=\"height: 540px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"list item show on scroll\">\n  <span>See the Pen <a href=\"https://codepen.io/blueshw/pen/PvYZgB\">\n  list item show on scroll</a> by Hyunwoo Seo (<a href=\"https://codepen.io/blueshw\">@blueshw</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script>\n<p>자바스크립트 코드는 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">isElementUnderBottom</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">elem<span class=\"token punctuation\">,</span> triggerDiff</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> top <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> elem<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> innerHeight <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> window<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> top <span class=\"token operator\">></span> innerHeight <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>triggerDiff <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">handleScroll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> elems <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.up-on-scroll'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  elems<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">elem</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isElementUnderBottom</span><span class=\"token punctuation\">(</span>elem<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      elem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>opacity <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">;</span>\n      elem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>transform <span class=\"token operator\">=</span> <span class=\"token string\">'translateY(70px)'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      elem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>opacity <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">;</span>\n      elem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>transform <span class=\"token operator\">=</span> <span class=\"token string\">'translateY(0px)'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> handleScroll<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>무척 간단하다. <code class=\"language-text\">isElementUnderBottom</code>는 함수 이름에서도 알 수 있듯이 element가 스크린 아래쪽에 있는지를 검사한다. 스크린 아래에 있으면 true를 반환할것이고, 스크린보다 위에 있으면 false를 반환한다. <code class=\"language-text\">IntersectionObserver</code>를 사용할 수도 있지만, 스크린 아래쪽에 있는지 여부만 판단하기 때문에 <code class=\"language-text\">getBoundingClientRect</code> 메서드를 이용해서 비교하는게 훨씬 간편하다.</p>\n<p><code class=\"language-text\">handleScroll</code>은 scroll 이벤트의 핸들러 함수다. 스크롤이 발생하면 이 함수가 실행된다. <code class=\"language-text\">querySelectorAll</code> API를 이용해서 class 이름을 가진 element를 모두 가져오자. 가져온 각 element가 화면보다 아래에 있다면 <code class=\"language-text\">opacity: 0</code>, <code class=\"language-text\">transform: translateY(70px)</code> 스타일이 적용되도록 하고, 화면 안에 있다면 <code class=\"language-text\">opacity: 1</code>, <code class=\"language-text\">transform: translateY(0px)</code> 스타일이 적용되도록 한다. 이제 스크롤을 하면 아래에서 element가 보일때 즈음 미리 설정한 <code class=\"language-text\">transition</code> 속성을 통해 element가 아래에서 부드럽게 나타나는것을 확인할 수 있다. 좀더 정교하게 구현하려면 <code class=\"language-text\">requestAnimationFrame</code> API를 이용해서 초당 60회 실행되도록 만들어야겠지만, 지금 만드는 효과는 굳이 초당 60회나 실행될 필요는 없다. 좀더 부드러운 움직임을 만들고 싶다면, 반드시 이 API를 사용해서 구현하자.</p>\n<p>다음은 HTML과 CSS 코드를 살펴보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n  <span class=\"token selector\">.list .up-on-scroll</span> <span class=\"token punctuation\">{</span>\n    ...\n    <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> transform 0.7s<span class=\"token punctuation\">,</span> opacity 1s<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>list<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  ...\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>article</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>up-on-scroll<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    We are dancing. We are extra dancing...\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>article</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>article</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>up-on-scroll<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    We are extra cool everyday dancing...\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>article</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>img-wrap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>...<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>img1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>up-on-scroll<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  ...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>아래에서 위로 올라오는 효과를 주고 싶은 element에 <code class=\"language-text\">up-on-scroll</code>을 붙여준다. 그리고 <code class=\"language-text\">transition</code> 속성에 opacity와 transform를 적용한다. 끝났다.</p>\n<h3 id=\"더욱-화려한-스크롤-이벤트를-만들어보자\" style=\"position:relative;\"><a href=\"#%EB%8D%94%EC%9A%B1-%ED%99%94%EB%A0%A4%ED%95%9C-%EC%8A%A4%ED%81%AC%EB%A1%A4-%EC%9D%B4%EB%B2%A4%ED%8A%B8%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EC%9E%90\" aria-label=\"더욱 화려한 스크롤 이벤트를 만들어보자 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>더욱 화려한 스크롤 이벤트를 만들어보자</h3>\n<p>결과물부터 확인하자.</p>\n<p class=\"codepen\" data-height=\"522\" data-theme-id=\"0\" data-default-tab=\"result\" data-user=\"blueshw\" data-slug-hash=\"WNNrOEo\" style=\"height: 540px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"more interactive effect on scroll\">\n  <span>See the Pen <a href=\"https://codepen.io/blueshw/pen/WNNrOEo\">\n  more interactive effect on scroll</a> by Hyunwoo Seo (<a href=\"https://codepen.io/blueshw\">@blueshw</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<p>세가지 정도 효과를 만들어봤다(코드 정리가 안되있어 <a href=\"https://codepen.io/blueshw/pen/WNNrOEo\">codepen</a>에서 직접 확인하자).</p>\n<blockquote>\n<ol>\n<li>이미지가 하나씩 아래에서 올라오면서 가운데에서 멈춘다. 기존 이미지는 새로운 이미지로 교체된다 .</li>\n<li>스크롤함에 따라 좌측 설명 부분과 우측의 이미지가 서로 다른 속도로 움직인다.</li>\n<li>화면에 가득찬 이미지가 있고, 스크롤함에 따라 점점 투명해져 배경색을 교체한다(black => white).</li>\n</ol>\n</blockquote>\n<p>주로 사용한 css 속성은 다음과 같다.</p>\n<blockquote>\n<ol>\n<li>이미지 wrapping 태그에 <code class=\"language-text\">position: sticky</code> 속성을 주었다. sticky 속성은 viewport에 고정하는 fixed와는 다르게 scroll box에 고정한다. 즉, 부모 element가 스크롤이 가능하다면 부모 element가 스크롤되는 동안 position을 유지한다.</li>\n<li>우측 이미지에 <code class=\"language-text\">transform</code>으로 스크롤 위치를 조절했다. 좀더 부드러운 스크롤 동작을 위해 <code class=\"language-text\">requestAnimationFrame</code> API를 사용하여 <code class=\"language-text\">throttle</code> 처리했다.</li>\n<li>sticky와 <code class=\"language-text\">filter: grayscale()</code>, <code class=\"language-text\">opacity</code>를 사용했다.</li>\n</ol>\n</blockquote>\n<h3 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h3>\n<p>스크롤 이벤트만 잘 활용해도 딱딱한 웹 페이지에 생명을 불어넣을 수 있다. 크게 어려운 개념도 없기 때문에 아이이디만 있으면 누구나 아름다운 웹 페이지 제작이 가능하다. 그렇다고 filter 등 연산량이 많은 작업을 너무 과하게 사용하면 성능 저하가 발생할 수 있으니 조심히 사용하자.  게다가 오래된 브라우저를 지원해야하는 경우라면 더더욱 조심히 사용해야한다.</p>\n<h3 id=\"참고자료\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\" aria-label=\"참고자료 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고자료</h3>\n<ul>\n<li><a href=\"https://cssanimation.rocks/scroll-animations/\">Scroll Animation</a></li>\n<li><a href=\"https://www.apple.com/kr/iphone-11-pro/\">apple iPhone 11 Pro 소개페이지</a></li>\n</ul>","tableOfContents":"<ul>\n<li><a href=\"/2019/10/13/show-items-on-scroll/#opacity%EC%99%80-transform%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%B4%EC%84%9C-%EB%AA%A9%EB%A1%9D%EC%9D%84-interactive%ED%95%98%EA%B2%8C-%EB%A7%8C%EB%93%A4%EA%B8%B0\">opacity와 transform을 이용해서 목록을 interactive하게 만들기</a></li>\n<li><a href=\"/2019/10/13/show-items-on-scroll/#%EB%8D%94%EC%9A%B1-%ED%99%94%EB%A0%A4%ED%95%9C-%EC%8A%A4%ED%81%AC%EB%A1%A4-%EC%9D%B4%EB%B2%A4%ED%8A%B8%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EC%9E%90\">더욱 화려한 스크롤 이벤트를 만들어보자</a></li>\n<li><a href=\"/2019/10/13/show-items-on-scroll/#%EA%B2%B0%EB%A1%A0\">결론</a></li>\n<li><a href=\"/2019/10/13/show-items-on-scroll/#%EC%B0%B8%EA%B3%A0%EC%9E%90%EB%A3%8C\">참고자료</a></li>\n</ul>","frontmatter":{"title":"[interactive web] 스크롤(scroll) 이벤트로 목록을 더 아름답게 만들어보자","date":"2019-10-13"}}},"pageContext":{"slug":"/2019/10/13/show-items-on-scroll/","previous":{"fields":{"slug":"/2019/09/29/vscode-plugin/"},"frontmatter":{"title":"Gatsby X VSCode 추천 플러그인","tags":["VSCode","gatsbyjs","plugin","prettier","esLint","Code Runner","markdownlint"]}},"next":{"fields":{"slug":"/2019/10/27/scss-module-system/"},"frontmatter":{"title":"[CSS] SCSS에 새로 추가된 Module System (@use, @forward)","tags":["css","SCSS","Sass","사스","at-rules","use","forward","import","모듈","module system"]}}}},"staticQueryHashes":[]}