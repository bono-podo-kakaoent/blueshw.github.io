{"componentChunkName":"component---src-templates-blog-post-js","path":"/2023/08/25/various-animation/","result":{"data":{"site":{"siteMetadata":{"title":"bono blog","author":"bono"}},"markdownRemark":{"id":"00ab3b29-9c7a-5e18-a008-07bc777406d2","excerpt":"프론트엔드에서 애니메이션을 구현하는 방법은 다양합니다. CSS 속성만으로도 구현이 가능하죠. 하지만 단순한 애니메이션이면 몰라도 조금만 난의도가 올라도 CSS 코드는 매우 복잡해집니다.  아래 몇 가지 예를 들어 프론트엔드에서 애니메이션 구현하는 방…","html":"<p>프론트엔드에서 애니메이션을 구현하는 방법은 다양합니다. CSS 속성만으로도 구현이 가능하죠. 하지만 단순한 애니메이션이면 몰라도 조금만 난의도가 올라도 CSS 코드는 매우 복잡해집니다. </p>\n<p>아래 몇 가지 예를 들어 프론트엔드에서 애니메이션 구현하는 방법에 대해 알아보겠습니다.</p>\n<h2 id=\"css-기반-애니메이션\" style=\"position:relative;\"><a href=\"#css-%EA%B8%B0%EB%B0%98-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98\" aria-label=\"css 기반 애니메이션 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS 기반 애니메이션</h2>\n<h4 id=\"transition\" style=\"position:relative;\"><a href=\"#transition\" aria-label=\"transition permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Transition</h4>\n<p><code class=\"language-text\">Transition</code>은 CSS의 속성 값 변경을 부드럽게 변환하는 데 사용됩니다. 주로 버튼의 hover 효과, fade in/out 효과 등 간단한 상호작용에 사용됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.button</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> background-color 0.3s ease<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.button:hover</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 코드는 버튼의 배경색을 부드럽게(transition) 빨간색으로 바꾸는 효과를 나타냅니다. 정말 간단하죠.</p>\n<h4 id=\"keyframes\" style=\"position:relative;\"><a href=\"#keyframes\" aria-label=\"keyframes permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Keyframes</h4>\n<p><code class=\"language-text\">KeyFrames</code>는 transition보다 복잡한 애니메이션을 구현할 때 사용됩니다. 별도의 keyframes로 만들어 여러 단계의 애니메이션을 정의할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> slideIn</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">0%</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateX</span><span class=\"token punctuation\">(</span>-100%<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">100%</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateX</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.slide-in-element</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> slideIn 0.5s forwards<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>요소를 왼쪽에서 오른쪽으로 슬라이드하는 애니메이션입니다. <code class=\"language-text\">transform</code> 속성 하나만 사용했지만, <code class=\"language-text\">opacity, color 등 다양한 요소를 혼합해서 사용</code>이 가능합니다. </p>\n<h2 id=\"javascript-기반-애니메이션\" style=\"position:relative;\"><a href=\"#javascript-%EA%B8%B0%EB%B0%98-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98\" aria-label=\"javascript 기반 애니메이션 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JavaScript 기반 애니메이션</h2>\n<h4 id=\"requestanimationframe\" style=\"position:relative;\"><a href=\"#requestanimationframe\" aria-label=\"requestanimationframe permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>requestAnimationFrame</h4>\n<p><code class=\"language-text\">브라우저의 화면 갱신 주기에 맞춰 애니메이션을 실행</code>하는 데 사용됩니다. 주로 복잡한 애니메이션 루프나 게임 등에 사용됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> start<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">step</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">timestamp</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>start<span class=\"token punctuation\">)</span> start <span class=\"token operator\">=</span> timestamp<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> progress <span class=\"token operator\">=</span> timestamp <span class=\"token operator\">-</span> start<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 애니메이션 코드</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>progress <span class=\"token operator\">&lt;</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>step<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>step<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"web-animations-api\" style=\"position:relative;\"><a href=\"#web-animations-api\" aria-label=\"web animations api permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Web Animations API</h4>\n<p>CSS의 Keyframes와 유사한 기능을 JavaScript로도 구현 가능합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".animated-element\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> keyframes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> transform<span class=\"token operator\">:</span> <span class=\"token string\">\"scale(1)\"</span><span class=\"token punctuation\">,</span> opacity<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> transform<span class=\"token operator\">:</span> <span class=\"token string\">\"scale(1.5)\"</span><span class=\"token punctuation\">,</span> opacity<span class=\"token operator\">:</span> <span class=\"token number\">0.5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> transform<span class=\"token operator\">:</span> <span class=\"token string\">\"scale(1)\"</span><span class=\"token punctuation\">,</span> opacity<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nelement<span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span>keyframes<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    duration<span class=\"token operator\">:</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">,</span>\n    iterations<span class=\"token operator\">:</span> <span class=\"token number\">Infinity</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>a<code class=\"language-text\">nimate 메서드로 애니메이션을 실행</code>시킬 수 있죠.</p>\n<h4 id=\"외부-라이브러리-사용\" style=\"position:relative;\"><a href=\"#%EC%99%B8%EB%B6%80-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%82%AC%EC%9A%A9\" aria-label=\"외부 라이브러리 사용 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>외부 라이브러리 사용</h4>\n<p>외부 라이브러리를 활용하여 미리 구현된 애니메이션을 사용할 수 있습니다.</p>\n<p><a href=\"https://greensock.com/\">GSAP(GreenSock Animation Platform)</a>는 강력한 애니메이션 라이브러리로, 복잡한 시퀀스나 타임라인 기반 애니메이션도 쉽게 만들 수 있습니다.</p>\n<p><a href=\"http://velocityjs.org/\">Velocity.js</a>도 사용하기 괜찮은 라이브러리입니다. jQuery 애니메이션보다 빠르고 강력한 기능을 제공합니다.</p>\n<h2 id=\"css와-javascript의-조합\" style=\"position:relative;\"><a href=\"#css%EC%99%80-javascript%EC%9D%98-%EC%A1%B0%ED%95%A9\" aria-label=\"css와 javascript의 조합 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS와 JavaScript의 조합</h2>\n<p>CSS로 애니메이션을 정의하고, JavaScript로 애니메이션을 조작하거나 제어할 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.fadeIn</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> fadeIn 1s forwards<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> fadeIn</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">0%</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">100%</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> box <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".box\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nbox<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  box<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fadeIn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>CSS에 애니메이션 동작을 미리 정의해두고, 자바스크립트에서 미리 정의해둔 class를 추가해주었습니다. <code class=\"language-text\">box에 fadeIn이라는 class가 붙게되면 애니메이션이 동작</code>하게 됩니다.</p>\n<h2 id=\"성능과-최적화-will-change\" style=\"position:relative;\"><a href=\"#%EC%84%B1%EB%8A%A5%EA%B3%BC-%EC%B5%9C%EC%A0%81%ED%99%94-will-change\" aria-label=\"성능과 최적화 will change permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>성능과 최적화 (will-change)</h2>\n<p>애니메이션 성능을 최적화하기 위한 방법은 다양하지만, 간단하게 <code class=\"language-text\">will-change</code>를 사용하는 방법이 있습니다. will-change에 transform과 opacity를 넣어주면 브라우저에게 미리 애니메이션을 준비하도록 지시할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.smooth-change</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">will-change</span><span class=\"token punctuation\">:</span> transform<span class=\"token punctuation\">,</span> opacity<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/CSS/CSS_Animations/Using_CSS_animations\">CSS 애니메이션</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API\">JavaScript Web Animations API</a>\ns</li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/2023/08/25/various-animation/#css-%EA%B8%B0%EB%B0%98-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98\">CSS 기반 애니메이션</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/2023/08/25/various-animation/#transition\">Transition</a></li>\n<li><a href=\"/2023/08/25/various-animation/#keyframes\">Keyframes</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2023/08/25/various-animation/#javascript-%EA%B8%B0%EB%B0%98-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98\">JavaScript 기반 애니메이션</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/2023/08/25/various-animation/#requestanimationframe\">requestAnimationFrame</a></li>\n<li><a href=\"/2023/08/25/various-animation/#web-animations-api\">Web Animations API</a></li>\n<li><a href=\"/2023/08/25/various-animation/#%EC%99%B8%EB%B6%80-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%82%AC%EC%9A%A9\">외부 라이브러리 사용</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/2023/08/25/various-animation/#css%EC%99%80-javascript%EC%9D%98-%EC%A1%B0%ED%95%A9\">CSS와 JavaScript의 조합</a></li>\n<li><a href=\"/2023/08/25/various-animation/#%EC%84%B1%EB%8A%A5%EA%B3%BC-%EC%B5%9C%EC%A0%81%ED%99%94-will-change\">성능과 최적화 (will-change)</a></li>\n<li><a href=\"/2023/08/25/various-animation/#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>","frontmatter":{"title":"프론트엔드에서 다양한 방식으로 애니메이션(animation) 구현하기","date":"2023-08-25"}}},"pageContext":{"slug":"/2023/08/25/various-animation/","previous":{"fields":{"slug":"/2023/08/24/tricky-zindex/"},"frontmatter":{"title":"써도 써도 헷갈리는 z-index의 미스터리","tags":["CSS","z-index","front-end"]}},"next":{"fields":{"slug":"/2023/08/26/design-pattern-for-frontend/"},"frontmatter":{"title":"프론트엔드(frontend) 마스터를 위한 디자인 패턴 적용 가이드","tags":["javascript","front-end","design-pattern"]}}}},"staticQueryHashes":[]}